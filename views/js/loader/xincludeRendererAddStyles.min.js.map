{"version":3,"mappings":"AAsBA,YACA,aADA,GAKAA,mDALA,CAMAC,kDANA,CAOAC,+CAPA,CASAC,4CACAC,qBADA,CAEAC,2DAFA,CAGAC,+CAHA,CAIA,IACAF,oCACA,YACAA,oBACA,CACAG,qDACA,+CACAA,cADA,GAEAA,iBAFA,CAGAC,mCAHA,CAKA,CALA,CAMAC,gEAPA,CAQA,gCARA,EASAC,iBAEA,CAXA,CAYA,CA9BA,CAiCAH,sCAGAA,kBAHA,GAMAA,gBANA,CAaAA,iDACAI,mBADA,CAEAA,sCAFA,CAGAA,4CACA,oEACA,CAFA,CAHA,CAMAC,2BACAD,+BACAJ,sBACA,CAFA,CADA,CAIAJ,gBACA,CALA,CAMA,CAzBA,EA4BAD,6CA5BA,CA6BAK,4BA7BA,CA+BAJ,gBAEA,CAjCA,CAkCA,CAnEA,G,CAqEAU,uC,CC1EAA,uJACA,aAEA,iIACA,oDAEA,gFACAC,mFACAC,cADA,GAGAC,IAHA,CAGAC,WACAA,2BACA,4BACAC,gBADA,CAEAC,eAFA,CAGAC,+EACAL,cADA,CAEAM,kBAFA,EAHA,CAOA,wBAPA,GASAC,sBACA,CAXA,CAYA,CAhBA,EAiBAC,KAjBA,EAkBA,CACA,CACA,CA3BA,C,CChBAV,8E","names":["loaderScript","configUrl","bundle","loadController","controllerOptions","controllerPath","params","window","controller","document","startController","bundles","require","define","request","uri","then","response","rel","type","href","stylesheet","head","catch"],"sources":["../../loader/bootstrap.js","../richPassage/xincludeRendererAddStyles.js","module-create.js"],"sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Bootstrap the app, start the entry controller\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n(function(){\n    'use strict';\n\n\n\n    var loaderScript = document.getElementById('amd-loader');\n    var configUrl = loaderScript.getAttribute('data-config');\n    var bundle  = loaderScript.getAttribute('data-bundle');\n\n    var loadController = function loadController(){\n        var controllerOptions = {};\n        var controllerPath = loaderScript.getAttribute('data-controller');\n        var params = loaderScript.getAttribute('data-params');\n        try{\n            controllerOptions = JSON.parse(params);\n        } catch(err){\n            controllerOptions = {};\n        }\n        window.require([controllerPath], function(controller) {\n            var startController = function startController(){\n                if(!window.started){\n                    window.started = true;\n                    controller.start(controllerOptions);\n                }\n            };\n            document.addEventListener('readystatechange', startController, false);\n            if (document.readyState === 'complete') {\n                startController();\n            }\n        });\n    };\n\n    //always start to load the config\n    window.require([configUrl], function() {\n\n        //define the global loading mechanism\n        if(!window.loadBundles){\n            //keep tracl of loaded bundles, even if require does it,\n            //this prevent some unecessary cycles\n            window.loaded = {};\n\n            /**\n             * Loading entry point for inter bundle dependency,\n             * always take the bundles from the params and window.bundles\n             * @param {String[]} [bundles] - an optional list of bundle to load\n             */\n            window.loadBundles = function loadBundles(bundles){\n                bundles = bundles || [];\n                bundles = bundles.concat(window.bundles)\n                bundles = bundles.filter( function(item, index){\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\n                });\n                require(bundles, function(){\n                    bundles.forEach( function( item ) {\n                        window.loaded[item] = true;\n                    });\n                    loadController();\n                });\n            }\n        }\n\n        if(bundle || (window.bundles && window.bundles.length)) {\n            window.loadBundles([bundle]);\n        } else {\n            loadController();\n        }\n    });\n})();\n\ndefine(\"loader/bootstrap\", function(){});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoMediaManager/richPassage/xincludeRendererAddStyles',['jquery', 'uri', 'util/url', 'core/dataProvider/request'], function ($, uri, urlUtil, request) {\n    'use strict';\n\n    return function xincludeRendererAddStyles(passageHref, head = $('head')) {\n        if (/taomedia:\\/\\/mediamanager\\//.test(passageHref)) {\n            // check rich passage styles and inject them to item\n            const passageUri = uri.decode(passageHref.replace('taomedia://mediamanager/', ''));\n            request(urlUtil.route('getStylesheets', 'SharedStimulusStyling', 'taoMediaManager'), {\n                uri: passageUri\n            })\n                .then(response => {\n                    response.forEach(element => {\n                        const styleElem = $('<link>', {\n                            rel: 'stylesheet',\n                            type: 'text/css',\n                            href: urlUtil.route('loadStylesheet', 'SharedStimulusStyling', 'taoMediaManager', {\n                                uri: passageUri,\n                                stylesheet: element\n                            }),\n                            'data-serial': passageUri\n                        });\n                        head.append(styleElem);\n                    });\n                })\n                .catch();\n        }\n    };\n});\n\n","\ndefine(\"taoMediaManager/loader/xincludeRendererAddStyles.bundle\", function(){});\n"]}