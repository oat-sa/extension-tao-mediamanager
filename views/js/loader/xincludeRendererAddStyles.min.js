(function(){"use strict";var loaderScript=document.getElementById("amd-loader"),configUrl=loaderScript.getAttribute("data-config"),bundle=loaderScript.getAttribute("data-bundle"),loadController=function loadController(){var controllerOptions={},controllerPath=loaderScript.getAttribute("data-controller"),params=loaderScript.getAttribute("data-params");try{controllerOptions=JSON.parse(params)}catch(err){controllerOptions={}}window.require([controllerPath],function(controller){var startController=function startController(){window.started||(window.started=!0,controller.start(controllerOptions))};document.addEventListener("readystatechange",startController,!1),"complete"===document.readyState&&startController()})};window.require([configUrl],function(){window.loadBundles||(window.loaded={},window.loadBundles=function loadBundles(bundles){bundles=bundles||[],bundles=bundles.concat(window.bundles),bundles=bundles.filter(function(item,index){return item&&bundles.indexOf(item)===index&&!0!==window.loaded[item]}),require(bundles,function(){bundles.forEach(function(item){window.loaded[item]=!0}),loadController()})}),bundle||window.bundles&&window.bundles.length?window.loadBundles([bundle]):loadController()})})(),define("loader/bootstrap",function(){}),define("taoMediaManager/qtiCreator/helper/formatStyles",["jquery"],function($){"use strict";function handleStylesheetLoad(e){const path=e&&e.composedPath&&e.composedPath(),linkTag=path[0];if(linkTag){const stylesheetUrl=linkTag.href.split("&stylesheet="),rdf_styles=stylesheetUrl[0].split("%23").reverse()[0],assets=$(`[data-identifier='${rdf_styles}']`);if(assets.length)return void assets.each((h,asset)=>{const assetClassName=asset.children[0].className.match(/[\w-]*tao-[\w-]*/g)||asset.children[1].className.match(/[\w-]*tao-[\w-]*/g);assetClassName?_formatStyles(linkTag.sheet,assetClassName[0]):_hideStyles(linkTag.sheet)});const stylesheetSerial=linkTag.dataset.serial,passagesItem=$(`div[data-serial*='${stylesheetSerial}']`);if(passagesItem.length)return void passagesItem.each((h,passages)=>{const passageWrapper=$(passages).find(".qti-include > div"),passageItemClassName=passageWrapper[0]&&passageWrapper[0].className&&passageWrapper[0].className.match(/[\w-]*tao-[\w-]*/g);passageItemClassName&&_formatStyles(linkTag.sheet,passageItemClassName[0])});const passagesPreview=$(`[data-href*='${rdf_styles}']`);if(passagesPreview.length)return void passagesPreview.each((h,passages)=>{const passagePreviewClassName=passages.className.match(/[\w-]*tao-[\w-]*/g);passagePreviewClassName&&_formatStyles(linkTag.sheet,passagePreviewClassName[0])})}}function _hideStyles(linkTag){const{cssRules}=linkTag||{},CSSStyleSheet=linkTag||{};cssRules&&Object.values(cssRules).map((index,rule)=>{CSSStyleSheet.deleteRule(index)})}function _formatStyles(linkTag,className){const{cssRules}=linkTag||{},CSSStyleSheet=linkTag||{},classNameFormated=className&&className.length?`.${className}`:"",scopedCssRules=_scopeStyles(cssRules,classNameFormated,["body","html","div.qti-item"]);if(cssRules&&scopedCssRules){Object.values(cssRules).map((index,rule)=>{CSSStyleSheet.deleteRule(index)});const newRules=scopedCssRules.split("\n");Object.values(newRules).map(rule=>{CSSStyleSheet.insertRule(rule)})}}function _scopeStyles(cssRules,scopeSelector,toReplace,replacementSelector){if(!cssRules)return"";replacementSelector||(replacementSelector=scopeSelector);const scopedStyles=Object.values(cssRules).map(rule=>{if(!rule.selectorText)return"";const rulesInBrackets=rule.cssText.substr(rule.selectorText.length).trim(),selectors=rule.selectorText.split(/\s*,\s*/),scopedSelectors=[];for(let singleSelectorText of selectors){if(["html","body","div.qti-item"].includes(singleSelectorText))continue;let numRepeat=0;if(scopeSelector&&toReplace)for(let toReplaceSelector of toReplace)singleSelectorText.includes(toReplaceSelector)&&(0<numRepeat&&(replacementSelector=""),singleSelectorText=singleSelectorText.replace(new RegExp(toReplaceSelector,"ig"),replacementSelector),numRepeat++);const containsScopeSelector=singleSelectorText.includes(`${scopeSelector} `)||singleSelectorText.startsWith(scopeSelector)||singleSelectorText.endsWith(scopeSelector);scopeSelector&&!containsScopeSelector?scopedSelectors.push(`${scopeSelector} ${singleSelectorText}`):scopedSelectors.push(singleSelectorText)}return scopedSelectors.length?`${scopedSelectors.join(",")} ${rulesInBrackets}`:""});return scopedStyles.filter(str=>0<str.length).join("\n")};return{handleStylesheetLoad}}),define("taoMediaManager/richPassage/xincludeRendererAddStyles",["lodash","jquery","uri","util/url","core/dataProvider/request","taoMediaManager/qtiCreator/helper/formatStyles"],function(_,$,uri,urlUtil,request,formatStyles){"use strict";return function xincludeRendererAddStyles(passageHref,passageClassName,serial){let head=3<arguments.length&&arguments[3]!==void 0?arguments[3]:$("head"),preview=!!(4<arguments.length&&arguments[4]!==void 0)&&arguments[4];if(/taomedia:\/\/mediamanager\//.test(passageHref)){const passageUri=uri.decode(passageHref.replace("taomedia://mediamanager/",""));request(urlUtil.route("getStylesheets","SharedStimulusStyling","taoMediaManager"),{uri:passageUri}).then(response=>{response.children.forEach(stylesheet=>{const link=urlUtil.route("loadStylesheet","SharedStimulusStyling","taoMediaManager",{uri:passageUri,stylesheet:stylesheet.name}),styleElem=$("<link>",{rel:"stylesheet",type:"text/css",href:link,"data-serial":passageUri});preview||(styleElem[0].onload=e=>formatStyles.handleStylesheetLoad(e),styleElem[0].dataset.serial=serial),head.append(styleElem)})}).catch()}}}),define("taoMediaManager/loader/xincludeRendererAddStyles.bundle",function(){});
//# sourceMappingURL=xincludeRendererAddStyles.min.js.map